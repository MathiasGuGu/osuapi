import axios from "axios";
import { log } from "console";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import styles from "../styles/Home.module.css";
import Navbar from "../components/Navbar";
import Podium from "../components/Podium";
const website_uri = "https://osunorway.vercel.app/";

export default function Home(data: any) {
  useEffect(() => {
    const getSessionToken = async () => {
      const response = await fetch("http://localhost:3000/api/GetSessionToken");
      const data = await response.json();
      document.cookie = `bearer=${data.sessionToken}`;
    };
    getSessionToken();
  }, []);

  /*OLD
  useEffect(() => {
    const getBearerToken = async () => {
      try {
        let response = await fetch(website_uri + "api/requestData", {
          method: "POST",
          body: JSON.stringify({ authCode: authCode }),
        });

        let data = await response.json();
        console.log(data);

        setAccessToken(data["access_token"]);
        data["access_token"] &&
          localStorage.setItem("accessToken", data["access_token"]);
        console.log(data["access_token"]);
      } catch (err) {
        console.error(err);
      }
    };

    getBearerToken();
    const token = localStorage.getItem("accessToken");
  }, [authCode]);
  */
  /*

Get the auth token through the params
save auth token in cookies or storage
Reset website by pushing a new route (going back to default route)
use token to get api endpoint response
display response data


  const router = useRouter();

  useEffect(() => {
    const setAuth = async () => {
      setAuthCode(String(router.query.code));
      console.log(authCode);
    };
    setAuth();
  }, [router.query, authCode]);
*/

  /*TODO
make a global store (redux, react storage etc...) 
^ session storage




get bearer token on page load 
place token in storage and use it for page\
*/

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header>
        <Navbar></Navbar>
      </header>
      <main className="bg-osu_background_dark w-screen h-screen p-0 m-0 flex flex-col gap-4 items-center justify-center p-5">
        <Podium></Podium>
        {data.data["news_posts"] ? (
          data.data["news_posts"].map((post: any, index: number) => {
            return (
              <div
                className="container w-[70%] h-72 bg-osu_light_gray flex items-center justify-center rounded-lg"
                key={index}
              >
                {post.title}
              </div>
            );
          })
        ) : (
          <div>Nothing found</div>
        )}
      </main>

      <footer className={styles.footer}></footer>
    </div>
  );
}

export async function getServerSideProps(context: any) {
  const url = new URL("https://osu.ppy.sh/api/v2/news");

  let headers = {
    "Content-Type": "application/json",
    Accept: "application/json",
  };
  const response = await fetch(url, { headers });
  const data = await response.json();

  return {
    props: {
      data,
    },
  };
}
