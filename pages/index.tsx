import axios from "axios";
import { log } from "console";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import styles from "../styles/Home.module.css";
import Navbar from "../components/Navbar";

const website_uri = "https://osunorway.vercel.app/";

export default function Home() {
  const [leaderboard, setLeaderboard] = useState<any>([]);

  /*OLD
  useEffect(() => {
    const getBearerToken = async () => {
      try {
        let response = await fetch(website_uri + "api/requestData", {
          method: "POST",
          body: JSON.stringify({ authCode: authCode }),
        });

        let data = await response.json();
        console.log(data);

        setAccessToken(data["access_token"]);
        data["access_token"] &&
          localStorage.setItem("accessToken", data["access_token"]);
        console.log(data["access_token"]);
      } catch (err) {
        console.error(err);
      }
    };

    getBearerToken();
    const token = localStorage.getItem("accessToken");
  }, [authCode]);
  */
  /*

Get the auth token through the params
save auth token in cookies or storage
Reset website by pushing a new route (going back to default route)
use token to get api endpoint response
display response data


  const router = useRouter();

  useEffect(() => {
    const setAuth = async () => {
      setAuthCode(String(router.query.code));
      console.log(authCode);
    };
    setAuth();
  }, [router.query, authCode]);
*/

  /*TODO
make a global store (redux, react storage etc...)
get bearer token on page load 
place token in storage and use it for page\
*/
  console.log(leaderboard);
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header>
        <Navbar></Navbar>
      </header>
      <main className="bg-osu_background_dark w-screen h-screen p-0 m-0"></main>

      <footer className={styles.footer}></footer>
    </div>
  );
}
